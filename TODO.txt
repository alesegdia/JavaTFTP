Functionality:

*) Server: send files
*) Server: receive files

*) Client: send files
*) Client: receive files

*) Implement timeouts and resend
*) Errors: capture, send and properly finish reporting the error.

Test:

*) Make unitary test?
*) Do cross-validation with other TFTP program

Future improvements:

*) Use ByteBuffer (see http://download.oracle.com/javase/6/docs/api/java/nio/ByteBuffer.html ) to simplify or replace Buffer.java

*) Improve the way of parsing (in MainClass) with one of the parsers discussed here: http://stackoverflow.com/questions/367706/is-there-a-good-command-line-argument-parser-for-java

*) Use Enum type (see http://download.oracle.com/javase/tutorial/java/javaOO/enum.html ) to group constants like read/write or octet/ascii/mail

*) Make a graphical user interface (keeping the comand line versi√≥n).

*) Rename (using git mv) Server to TFTP_ServerSocket and Transfer to TFTP_Socket or something similar?

*) Implement TFTP extensions: see Timeout_TransferSize_Options.txt (rfc 1784) and Option_Extension.txt (rfc 1782). Transfer size option is equivalent to blocksize option of Blocksize_Option.txt (rfc 1783)?
